Add to Notes:
      
Backend:
  AppLib and App project:
    ✔ finish project and move to links-laptop @done(21-08-05 21:29)
    ✔ dynamic modules projects @done(21-08-05 21:29)
      ✔ move all to links-laptop, @done(21-08-05 21:29)
      ✔ create github repositories to all @done(21-08-05 21:29)
      ✔ add project's path to Notable notes @done(21-08-05 21:30)    
    ☐ rename backend to koakh-nestjs-graphql-starter
    ☐ rename NestGraphql.....AuthOptions
    ☐ add all client.http auth operations like refresh-token nest-graphql-auth-client/auth-client.controller.ts
    
  Library nestjs-package-jwt-authentication-graphql:
    ☐ config properties injected from consumer
    ☐ replace with options service
      secretOrKey: configService.get('accessTokenJwtSecret'),
    ☐ update all packages to latest releases
    ☐ clean up code, todo's and comments
    ☐ create repo to house project
    ☐ create readme with a nest new package using the package
    ☐ move package from this repo? or leave it here
  Library app-lib:
    ☐ @high create simple sarter project and repository, llok to play with dynamic modules, like second project of it
    ✔ app and app-lib add abstract class to.... @done(21-07-24 22:04)
      @Inject('APP_SERVICE')
      private readonly appService: any,
  Important:
    ✔ remove env-cmd there is not required to work with nestConfig @done(21-07-19 22:13)
    ☐ UserInMemory must have all interface implementations used in user service
      ✔ use currentUser with moke data, ex johnDoe filter something, admin filter all @done(21-07-18 00:06)
    ✔ fix subscriptions GqlGuard @done(21-07-17 23:57)
    ✔ create all operations on client.http @done(21-07-17 23:57)
    ✔ finish graphql authentication implemention @done(21-07-17 23:57)
    ✔ remove solidarychain.com references, certificates etc @done(21-07-18 00:05)
    ✔ test refreshToken changed code from github commits @done(21-07-18 00:05)
    ✔ test refreshToken livecycle @done(21-07-18 00:05)
    ✔ subscriptions "message": "Cannot read property 'userId' of undefined", @done(21-07-18 00:05)
    ✔ use nestConfig EveryWhere serach for {e. @done(21-07-18 00:06)
    ✔ update all packages to latest @done(21-07-16 01:24)
      - https://stackoverflow.com/questions/68354656/unhandledpromiserejectionwarning-error-you-must-await-server-start-before
      - change from "apollo-server-express": "^3.0.0" to "apollo-server-express": "^3.0.0"
    ✔ fix refreshToken : POST body missing. Did you forget use body-parser middleware? @done(21-07-16 01:24)
      This error also caused by incorrect json in the body or some other problems in the body, such as unnecessary wrong invisible chars. So check generated json for errors and what is actually presents in the request body.
      stupide error is related to using /graphql
    ✔ finish auth livecycle notes in client.http and bring it here @done(21-07-18 00:06)
    ✔ UsersModule and friends to singular @done(21-07-15 00:54)
    ✔ use `user: CurrentUserPayload` to filter data by user, tenancy, add moke owner or createdBy @done(21-07-18 00:06)
    ✔ add disable CORS and other stuff from c3-backend @done(21-07-18 00:06)
    ✔ create nest workspaces and 2 libraries on for users and other for auth that consumes one users module @done(21-07-18 23:42)
    ✔ extract library from implementation @done(21-07-18 23:42)
    ☐ graphql uploads
    ☐ dockerImage, must delete package-lock.json else hits in auth library
    ☐ clear all TODO's
    ☐ clean old NOTES.md
  Other:
    ☐ use authPackage `GraphQLError [Object]: Query root type must be provided.`
      - https://stackoverflow.com/questions/64105940/graphqlerror-query-root-type-must-be-provided
      > All servers running with GraphQL must have at least one @Query() to be considered a valid GraphQL server. Without it, the apollo-server package will throw an exception and the server will fail to start. This can be as simple as
    ☐ Complete instructions to add to a new GraphQL Project    
      require
        use packages/backend-nestjs/src/user for GraphQL Root Query
      require, try add it to @koakh/nestjs-package-jwt-authentication
      with CurrentUser files to
        ├── guards
        │   ├── gql-auth.guard.ts
        │   ├── gql-local-auth.guard.ts
        │   └── index.ts
        └── utils.ts
    ☐ Improved notes to bootrap GQL and Reast project from @koakh/nestjs-package-jwt-authentication
    ☐ Fix Error : "TypeError: response.status is not a function",
      /@koakh/nestjs-package-jwt-authentication/src/common/filters/http-exception.filter.ts:12:14)",
    ☐ Remove getEnvVariables
